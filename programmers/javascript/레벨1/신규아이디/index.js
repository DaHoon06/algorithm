/**
 *
 * @param new_id: 생성할 아이디
 * @returns {string}
 */
function solution(new_id) {
    const ID = new_id.toLowerCase()                     // 1단계: 소문자로 치환
        .replace(/[^\w-_.]/g,'') // 2단계: 알파벳 소문자, 숫자 -_. 제외한 문자열
        .replace(/\.+/g,'.')     // 3단계: .가 2번 이상일 경우 . 하나로 치환
        .replace(/^\.|\.$/g,'')  // 4단계: 처음과 끝에 . 일경우 제거
        .replace(/^$/,'a')       // 5단계: new_id가 빈문자열 일경우 a 대입
        .slice(0, 15).replace(/\.$/,''); // 6단계: 16이상일 경우 첫문자열에서 15문자까지 자르고 마지막에 .일경우 제거

    return ID.padEnd(3,ID[ID.length - 1]); // 7단계: ID가 2자 이하일경우 ID의 마지막 문자를 길이가 3이 될때까지 반복
}

/*
* 자바스크립트 정규식 시작 => /정규식/
*
* 문자셋: []안에 들어가는 문자열, . or * 등 같은 정규식의 특수문자가 특수문자 취급받지 않고 문자 그대로 취급
* \w : [A-Za-z0-9] 와 동일한 정규식
* [^문자셋]: 문자셋 안에 ^가 존재할경우 해당 문자셋은 부정이 된다.
* /정규식/g: 정규식에 해당하는 모든 문자를 찾는다.
* */